@model AllItemsQueryModel

@{
    ViewBag.Title = "All Products";
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get">
    <div class="row d-flex justify-content-center">
        <div class="col-md-3">
            <div class="form-group mb-2">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group mb-2">
                <label asp-for="SearchString"></label>
                <input asp-for="SearchString" class="form-control" placeholder="...">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group mb-2">
                <label asp-for="ItemSorting"></label>
                <select asp-for="ItemSorting" class="form-control">
                    <option value="0">Products (Newest)</option>
                    <option value="1">Products (Oldest)</option>
                    <option value="2">Price (Ascending)</option>
                    <option value="3">Price (Descending)</option>
                </select>
            </div>
        </div>
        <div class="col-md-1">
            <div class="form-group mb-1">
                <label>&nbsp;</label> <!-- Empty label for spacing -->
                <input type="submit" value="Search" class="btn btn-primary form-control" />
            </div>
        </div>
    </div>
</form>


@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    int maxPage = (int)Math.Ceiling((double)Model.TotalItems /
    Model.ItemsPerPage);
}
<div>
    <nav aria-label="Pagination" class="inline-block">
        <ul class="pagination justify-content-center">
            <a class="btn btn-outline-primary me-1 @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Item"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchString"
               asp-route-sorting="@((int)Model.ItemSorting)">Previous</a>

            @for (int i = 1; i <= maxPage; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("All", "Item", new { currentPage = i })">@i</a>
                </li>
            }
            @{
                var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                !Model.Items.Any();
            }
            <a class="btn btn-outline-primary ms-1 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Item"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchString"
               asp-route-sorting="@((int)Model.ItemSorting)">Next</a>
        </ul>
    </nav>
</div>

@if (!Model.Items.Any())
{
    <h2 class="text-center">No products found by the given criteria!</h2>
}
<div class="row">
    @foreach (var item in Model.Items)
    {
        <partial name="_ItemPartial" model="@item" />
    }
</div>

<div>
    <nav aria-label="Pagination" class="inline-block">
        <ul class="pagination justify-content-center">
            <a class="btn btn-outline-primary me-1 @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Item"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchString"
               asp-route-sorting="@((int)Model.ItemSorting)">Previous</a>

            @for (int i = 1; i <= maxPage; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("All", "Item", new { currentPage = i })">@i</a>
                </li>
            }
            @{
                shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                !Model.Items.Any();
            }
            <a class="btn btn-outline-primary ms-1 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Item"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchString"
               asp-route-sorting="@((int)Model.ItemSorting)">Next</a>
        </ul>
    </nav>
</div>
